<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.31.xsd">

    <changeSet id="003-add-service-account-permissions" author="iam-developer">
        <comment>Add Service Account management permissions</comment>
        <sql>
            -- Service Account Management Permissions
            INSERT INTO permissions (permission_id, name, description) VALUES
            (gen_random_uuid(), 'service_account:create', 'Create new service accounts'),
            (gen_random_uuid(), 'service_account:read', 'View service account details'),
            (gen_random_uuid(), 'service_account:update', 'Update service account information'),
            (gen_random_uuid(), 'service_account:delete', 'Delete service accounts'),
            (gen_random_uuid(), 'service_account:manage_credentials', 'Rotate service account credentials');
        </sql>
    </changeSet>

    <changeSet id="003-assign-service-account-permissions-to-admin-roles" author="iam-developer">
        <comment>Assign Service Account permissions to admin roles</comment>
        <sql>
            -- Assign all service account permissions to EAF Super-Admin role
            INSERT INTO role_permissions (role_id, permission_id)
            SELECT
                (SELECT role_id FROM roles WHERE name = 'EAF_SUPER_ADMIN'),
                permission_id
            FROM permissions
            WHERE name LIKE 'service_account:%';

            -- Assign tenant-level service account permissions to Tenant Admin role
            INSERT INTO role_permissions (role_id, permission_id)
            SELECT
                (SELECT role_id FROM roles WHERE name = 'TENANT_ADMIN'),
                permission_id
            FROM permissions
            WHERE name IN ('service_account:create', 'service_account:read', 'service_account:update',
                          'service_account:delete', 'service_account:manage_credentials');
        </sql>
    </changeSet>

    <changeSet id="003-rollback" author="iam-developer">
        <rollback>
            DELETE FROM role_permissions
            WHERE permission_id IN (
                SELECT permission_id FROM permissions WHERE name LIKE 'service_account:%'
            );
            DELETE FROM permissions WHERE name LIKE 'service_account:%';
        </rollback>
    </changeSet>
</databaseChangeLog>
