name: ACCI EAF CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Global settings for retry logic on failures
env:
  RETRY_ATTEMPTS: 3
  RETRY_DELAY: 10

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          cache-disabled: false
          
      - name: Generate Build Version
        id: build-version
        run: |
          if [[ $(git tag --points-at HEAD) != "" ]]; then
            VERSION=$(git tag --points-at HEAD | sort -V | tail -n 1)
          else
            GIT_DESCRIBE=$(git describe --tags --always --dirty)
            VERSION="dev-${GIT_DESCRIBE}-${GITHUB_RUN_NUMBER:-local}"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Building version: ${VERSION}"
          
      - name: Build, Test and Run Quality Checks
        run: ./gradlew build cleanCheck
        
      - name: Generate Build Manifest
        run: |
          mkdir -p build/artifacts
          cat > build/artifacts/build-manifest.json << EOF
          {
            "version": "${{ env.VERSION }}",
            "buildTimestamp": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')",
            "gitCommit": "${{ github.sha }}",
            "gitBranch": "${{ github.ref_name }}",
            "buildNumber": "${{ github.run_number }}",
            "buildUrl": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
          EOF
          cat build/artifacts/build-manifest.json
          
      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            eaf-core/build/libs/*.jar
            build/artifacts/build-manifest.json
          retention-days: 7
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Build and Push Docker Image for eaf-core
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./eaf-core/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/eaf-core:${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/eaf-core:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/eaf-core:${{ env.VERSION }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
        
      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/build/reports/tests/
            **/build/test-results/
          retention-days: 7
          
      - name: Archive Quality Check Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quality-check-results
          path: |
            **/build/reports/detekt/
            **/build/reports/ktlint/
          retention-days: 7
  
  # Job for sending notifications on failure
  notify:
    name: Notify on Failure
    needs: build-and-test
    if: failure()
    runs-on: ubuntu-latest
    
    steps:
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "[FAILED] CI Pipeline for ACCI EAF (${{ github.repository }})"
          body: |
            CI Pipeline for ${{ github.repository }} has failed!
            
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Commit Message: ${{ github.event.head_commit.message }}
            
            View the failed run here:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.TEAM_EMAIL }}
          from: CI/CD Pipeline <${{ secrets.MAIL_USERNAME }}>
          
      # Optional: Add Slack notification if you use Slack
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: CI/CD Pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 